name: Bootstrap Geostore AWS accounts with latest version

on:
  workflow_dispatch:

jobs:
  boostrap-ci:
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.1.0
        with:
          submodules: 'true'
          fetch-depth: 0

      - name: Get configuration
        run: |
          echo "NODE_VERSION=$(cat .nvmrc)" | tee -a $GITHUB_ENV
          echo "PYTHON_VERSION=$(cat .python-version)" | tee -a $GITHUB_ENV

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org

      - name: Cache Node.js packages
        uses: actions/cache@v3.0.11
        with:
          path: ~/.npm
          key:
            ${{ runner.os }}-node-${{ secrets.CACHE_SEED }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ secrets.CACHE_SEED }}-

      - name: Install Node.js dependencies
        run: npm ci --production

      - name: Add local Node packages to PATH
        run: echo "./node_modules/.bin:$PATH" >> $GITHUB_PATH

      - name: Use Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4.3.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v3.0.11
        with:
          path: ~/.cache/pip
          key:
            ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ env.PYTHON_VERSION }}-${{
            hashFiles('./poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ env.PYTHON_VERSION }}-

      - name: Install Python dependencies
        run: |
          python -m pip install --requirement=geostore/pip.txt
          python -m pip install --requirement=geostore/poetry.txt
          python -m poetry install \
              --extras="$(sed --quiet '/\[tool\.poetry\.extras\]/,/^\[/{s/^\(.*\) = \[/\1/p}' pyproject.toml | sed --null-data 's/\n/ /g;s/ $//')" \
              --no-root --only=main

      - name: Print CDK version
        run: poetry run cdk --version

      - name: Get Oidc deploy role arn
        run: cat .github/workflows/.env >> $GITHUB_ENV

      - name: (CI) Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-region: ap-southeast-2
          mask-aws-account-id: true
          role-to-assume: ${{ env.CiOidc }}

      - name: Bootstrap CDK
        run: |
          poetry run cdk bootstrap aws://unknown-account/ap-southeast-2

      - name: Report current bootstrap version
        run:
          aws ssm get-parameter --name /cdk-bootstrap/hnb659fds/version --query Parameter.Value | jq
          --raw-output .

  boostrap-nonprod:
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.1.0
        with:
          submodules: 'true'
          fetch-depth: 0

      - name: Get configuration
        run: |
          echo "NODE_VERSION=$(cat .nvmrc)" | tee -a $GITHUB_ENV
          echo "PYTHON_VERSION=$(cat .python-version)" | tee -a $GITHUB_ENV

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org

      - name: Cache Node.js packages
        uses: actions/cache@v3.0.11
        with:
          path: ~/.npm
          key:
            ${{ runner.os }}-node-${{ secrets.CACHE_SEED }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ secrets.CACHE_SEED }}-

      - name: Install Node.js dependencies
        run: npm ci --production

      - name: Add local Node packages to PATH
        run: echo "./node_modules/.bin:$PATH" >> $GITHUB_PATH

      - name: Use Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4.3.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v3.0.11
        with:
          path: ~/.cache/pip
          key:
            ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ env.PYTHON_VERSION }}-${{
            hashFiles('./poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ env.PYTHON_VERSION }}-

      - name: Install Python dependencies
        run: |
          python -m pip install --requirement=geostore/pip.txt
          python -m pip install --requirement=geostore/poetry.txt
          python -m poetry install \
              --extras="$(sed --quiet '/\[tool\.poetry\.extras\]/,/^\[/{s/^\(.*\) = \[/\1/p}' pyproject.toml | sed --null-data 's/\n/ /g;s/ $//')" \
              --no-root --only=main

      - name: Print CDK version
        run: poetry run cdk --version

      - name: Get Oidc deploy role arn
        run: cat .github/workflows/.env >> $GITHUB_ENV

      - name: (Non-Prod) Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-region: ap-southeast-2
          mask-aws-account-id: true
          role-to-assume: ${{ env.NonProdOidc }}

      - name: Bootstrap CDK
        run: |
          poetry run cdk bootstrap aws://unknown-account/ap-southeast-2

      - name: Report current bootstrap version
        run:
          aws ssm get-parameter --name /cdk-bootstrap/hnb659fds/version --query Parameter.Value | jq
          --raw-output .

  boostrap-prod:
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.1.0
        with:
          submodules: 'true'
          fetch-depth: 0

      - name: Get configuration
        run: |
          echo "NODE_VERSION=$(cat .nvmrc)" | tee -a $GITHUB_ENV
          echo "PYTHON_VERSION=$(cat .python-version)" | tee -a $GITHUB_ENV

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3.5.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org

      - name: Cache Node.js packages
        uses: actions/cache@v3.0.11
        with:
          path: ~/.npm
          key:
            ${{ runner.os }}-node-${{ secrets.CACHE_SEED }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ secrets.CACHE_SEED }}-

      - name: Install Node.js dependencies
        run: npm ci --production

      - name: Add local Node packages to PATH
        run: echo "./node_modules/.bin:$PATH" >> $GITHUB_PATH

      - name: Use Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4.3.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v3.0.11
        with:
          path: ~/.cache/pip
          key:
            ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ env.PYTHON_VERSION }}-${{
            hashFiles('./poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ env.PYTHON_VERSION }}-

      - name: Install Python dependencies
        run: |
          python -m pip install --requirement=geostore/pip.txt
          python -m pip install --requirement=geostore/poetry.txt
          python -m poetry install \
              --extras="$(sed --quiet '/\[tool\.poetry\.extras\]/,/^\[/{s/^\(.*\) = \[/\1/p}' pyproject.toml | sed --null-data 's/\n/ /g;s/ $//')" \
              --no-root --only=main

      - name: Print CDK version
        run: poetry run cdk --version

      - name: Get Oidc deploy role arn
        run: cat .github/workflows/.env >> $GITHUB_ENV

      - name: (Prod) Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-region: ap-southeast-2
          mask-aws-account-id: true
          role-to-assume: ${{ env.ProdOidc }}

      - name: Bootstrap CDK
        run: |
          poetry run cdk bootstrap aws://unknown-account/ap-southeast-2

      - name: Report current bootstrap version
        run:
          aws ssm get-parameter --name /cdk-bootstrap/hnb659fds/version --query Parameter.Value | jq
          --raw-output .
