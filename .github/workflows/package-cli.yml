name: Package CLI for PyPI release
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - id: python-version
        run: echo "::set-output name=id::$(cat .python-version)"

      - name: Use Python ${{ steps.python-version.outputs.id }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ steps.python-version.outputs.id }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key:
            ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ steps.python-version.outputs.id
            }}-${{ hashFiles('./poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ secrets.CACHE_SEED }}-${{ steps.python-version.outputs.id }}-

      - name: Install Python dependencies
        run: |
          python -m pip install --requirement=geostore/pip.txt
          python -m pip install poetry
          python -m poetry install --no-dev --no-root

      - name: Build
        run: poetry build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: dist/*
          if-no-files-found: error
